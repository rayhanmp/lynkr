/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as TagsRouteImport } from './routes/tags'
import { Route as FoldersRouteImport } from './routes/folders'
import { Route as AnalyticsRouteImport } from './routes/analytics'
import { Route as IndexRouteImport } from './routes/index'

const TagsRoute = TagsRouteImport.update({
  id: '/tags',
  path: '/tags',
  getParentRoute: () => rootRouteImport,
} as any)
const FoldersRoute = FoldersRouteImport.update({
  id: '/folders',
  path: '/folders',
  getParentRoute: () => rootRouteImport,
} as any)
const AnalyticsRoute = AnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/folders': typeof FoldersRoute
  '/tags': typeof TagsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/folders': typeof FoldersRoute
  '/tags': typeof TagsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/analytics': typeof AnalyticsRoute
  '/folders': typeof FoldersRoute
  '/tags': typeof TagsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/analytics' | '/folders' | '/tags'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/analytics' | '/folders' | '/tags'
  id: '__root__' | '/' | '/analytics' | '/folders' | '/tags'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AnalyticsRoute: typeof AnalyticsRoute
  FoldersRoute: typeof FoldersRoute
  TagsRoute: typeof TagsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/analytics': {
      id: '/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof AnalyticsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/folders': {
      id: '/folders'
      path: '/folders'
      fullPath: '/folders'
      preLoaderRoute: typeof FoldersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/tags': {
      id: '/tags'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof TagsRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/analytics' {
  const createFileRoute: CreateFileRoute<
    '/analytics',
    FileRoutesByPath['/analytics']['parentRoute'],
    FileRoutesByPath['/analytics']['id'],
    FileRoutesByPath['/analytics']['path'],
    FileRoutesByPath['/analytics']['fullPath']
  >
}
declare module './routes/folders' {
  const createFileRoute: CreateFileRoute<
    '/folders',
    FileRoutesByPath['/folders']['parentRoute'],
    FileRoutesByPath['/folders']['id'],
    FileRoutesByPath['/folders']['path'],
    FileRoutesByPath['/folders']['fullPath']
  >
}
declare module './routes/tags' {
  const createFileRoute: CreateFileRoute<
    '/tags',
    FileRoutesByPath['/tags']['parentRoute'],
    FileRoutesByPath['/tags']['id'],
    FileRoutesByPath['/tags']['path'],
    FileRoutesByPath['/tags']['fullPath']
  >
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AnalyticsRoute: AnalyticsRoute,
  FoldersRoute: FoldersRoute,
  TagsRoute: TagsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
